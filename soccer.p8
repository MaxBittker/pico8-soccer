pico-8 cartridge // http://www.pico-8.com
version 16
__lua__
-- wall and actor collisions
-- by zep

actor = {} --all actors in world
ball = nil
score = {0,0}
-- make an actor
-- and add to global collection
-- x,y means center of the actor
-- in map tiles (not pixels)
function make_actor(x, y)
 a={}
 a.x = x
 a.y = y
 a.dx = 0
 a.dy = 0
 a.spr = 16
 a.frame = 0
 a.t = 0
 a.inertia = 0.6
 a.bounce  = 1
 a.frames=4
 
 -- half-width and half-height
 -- slightly less than 0.5 so
 -- that will fit through 1-wide
 -- holes.
 a.w = 0.4
 a.h = 0.4
 
 add(actor,a)
 
 return a
end

function _init()
 -- make player top left
 pl = make_actor(6,6)
 pl2 = make_actor(15,6)
 pl.spr = 17
 pl2.spr = 5
 

 ball = make_actor(9,7)
 ball.spr = 49
 ball.dx=-0.0
 ball.dy=0.0
 ball.inertia=1
 ball.bounce = 0.8
 
end

function reset_ball()
 ball.dx = 0
 ball.dy = 0
 ball.x = 9
 ball.y = 6
end

-- for any given point on the
-- map, true if there is wall
-- there.

function solid(x, y)

 -- grab the cell value
 val=mget(x, y)
 
 -- check if flag 1 is set (the
 -- orange toggle button in the 
 -- sprite editor)
 return fget(val, 1)
 
end

-- solid_area
-- check if a rectangle overlaps
-- with any walls

--(this version only works for
--actors less than one tile big)

function solid_area(x,y,w,h)

 return 
  solid(x-w,y-h) or
  solid(x+w,y-h) or
  solid(x-w,y+h) or
  solid(x+w,y+h)
end


-- true if a will hit another
-- actor after moving dx,dy
function solid_actor(a, dx, dy)
 for a2 in all(actor) do
  if a2 != a then
   local x=(a.x+dx) - a2.x
   local y=(a.y+dy) - a2.y
   if ((abs(x) < (a.w+a2.w)) and
      (abs(y) < (a.h+a2.h)))
   then 
    
    -- moving together?
    -- this allows actors to
    -- overlap initially 
    -- without sticking together    
    if (dx != 0 and abs(x) <
        abs(a.x-a2.x)) then
     v=a.dx + a2.dy
     a.dx = v/2
     a2.dx = v/2
     return true 
    end
    
    if (dy != 0 and abs(y) <
        abs(a.y-a2.y)) then
     v=a.dy + a2.dy
     a.dy=v/2
     a2.dy=v/2
     return true 
    end
    
    --return true
    
   end
  end
 end
 return false
end


-- checks both walls and actors
function solid_a(a, dx, dy)
 if solid_area(a.x+dx,a.y+dy,
    a.w,a.h) then
    return true end
 return solid_actor(a, dx, dy) 
end

function score_ball(a)
 val=mget(a.x+a.dx-a.w,
  a.y+a.dy)
 if fget(val, 2) then
   score[1]+=1
   reset_ball()
 end 
 
 val=mget(a.x+a.dx+a.w,
  a.y+a.dy)
 if fget(val, 3) then
   score[2]+=1
   reset_ball()
 end
 
end

function move_actor(a)

 -- only move actor along x
 -- if the resulting position
 -- will not overlap with a wall

 if(a == ball) score_ball(ball)
 
 
 if not solid_a(a, a.dx, 0) 
 then
  a.x += a.dx
 else   
  -- otherwise bounce
  a.dx *= -a.bounce

  sfx(2)
 end

 -- ditto for y

 if not solid_a(a, 0, a.dy) then
  a.y += a.dy
 else
  a.dy *= -a.bounce
  sfx(2)
 end
 
 -- apply inertia
 -- set dx,dy to zero if you
 -- don't want inertia
 
 a.dx *= a.inertia
 a.dy *= a.inertia
 
 -- advance one frame every
 -- time actor moves 1/4 of
 -- a tile
 
 a.frame += abs(a.dx) * 4
 a.frame += abs(a.dy) * 4
 a.frame %= a.frames

 a.t += 1
 
end

function control_player(pl,t)

 -- how fast to accelerate
 accel = 0.1
 
 if (btn(0,t)) pl.dx -= accel 
 if (btn(1,t)) pl.dx += accel 
 if (btn(2,t)) pl.dy -= accel 
 if (btn(3,t)) pl.dy += accel 

 -- play a sound if moving
 -- (every 4 ticks)
 
 if (abs(pl.dx)+abs(pl.dy) > 0.1
     and (pl.t%4) == 0) then
  sfx(1)
 end
 
end

function _update()
 control_player(pl,0)
 control_player(pl2,1)
 camera(ball.x,ball.y)
 foreach(actor, move_actor)
end

function draw_actor(a)
 local sx = (a.x * 8) - 4
 local sy = (a.y * 8) - 4
 spr(a.spr + a.frame, sx, sy)
end

function _draw()
 cls()
 map(0,0,0,0,18,18)
 foreach(actor,draw_actor)
 print("red:"..score[1],30,120,7)
 print("blue:"..score[2],64,120,7)
 
end

__gfx__
000000003bbbbbb7dccccc770cccccc00000000000ccc70000ccc70000ccc70000ccc70000000000000000000000000000000000000000000000000000000000
000000003000000bd0000077d000007c101110100cccccc00cccccc00cccccc00cccccc000000000000000000000000000000000000000000000000000000000
000000003000070bd000000cd000770c000000000ceeeec00ceeeec00ceeeec00ceeeec000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000770c000000000c5ee5c00c5ee5c00c5ee5c00c5ee5c000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c000000000ceeeec00ceeeecc0ceeeec0cceeeec000000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c00101101ccccccccccccccc0cccccccc0ccccccc00000000000000000000000000000000000000000000000000000000
000000003000000bd000000cd000000c000000000cccccc00cccccc00cccccc00cccccc000000000000000000000000000000000000000000000000000000000
00000000111111115111111101111110000000000c0000c0c00000c00c0000c00c00000c00000000000000000000000000000000000000000000000000000000
aaaaaaaa008888000088880000888800008888000000000044444444444444440000000000000000000000000000000000000000000000000000000000000000
a000000a08d88d8008d88d8008d88d8008d88d8000070000488888844cccccc40000000000000000000000000000000000000000000000000000000000000000
a000000a0800088008000080080000800880008000000000488888844cccccc40000000000000000000000000000000000000000000000000000000000000000
a000000a0807088888077080880770800880708800070000488888844cccccc40000000000000000000000000000000000000000000000000000000000000000
a000000a8800088008000088080000888880008000000000488888844cccccc40000000000000000000000000000000000000000000000000000000000000000
a000000a0084480000844800008448000084480000070000488888844cccccc40000000000000000000000000000000000000000000000000000000000000000
a000000a0044440000404440004444000044440000000000488888844cccccc40000000000000000000000000000000000000000000000000000000000000000
aaaaaaaa060006000060006000600600060006000007000044444444444444440000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000077770000554400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a00700007005544440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000770a7000770755444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000770a7000770754444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000000a7000000744444444000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000a000000a7000000744444f44000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000000a0000a0070000700444f440000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000aaaa000077770000444400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000007777000077770000777700007777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000077777700777777007777770077777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000177777671677777717777777177777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000167676761767676716767676176767670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000167676761767676716767676176767670000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000117767771177767711676777117776770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000011777700117777001177770011777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000001111000011110000111100001111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__gff__
00020202000000000000000000000000000000000000060a0000000000000000000000020000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0010020202020202020202020202021000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002030000000000040004000000030200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002000000000000040000000000040200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0003000404040000040000040400000300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1623000004040000040004040000002317000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1615000400040404000004000004001517000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1615000000000004000004000004001517000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1615000000040004000004000004001517000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1623040000040004000004040004002317000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002000004040004000004040404000200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002000000000004000404000404040200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002030004000004000000000000030300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0210020202020302020202020202031000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000100000c55012540075100050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
000100003073020750217201171000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700007000070000700
